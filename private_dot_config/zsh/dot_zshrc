echo "start of zsh"
if [[ "$(uname)" == "Linux" ]]; then
        eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
else
        eval "$(/opt/homebrew/bin/brew shellenv)"
fi

# Set the directory we want to store zinit and plugins
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"

# Download Zinit, if it's not there yet
if [ ! -d "$ZINIT_HOME" ]; then
   mkdir -p "$(dirname $ZINIT_HOME)"
   git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
fi

# Source/Load zinit
source "${ZINIT_HOME}/zinit.zsh"

# Add in zsh plugins
zinit light zsh-users/zsh-syntax-highlighting
zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-autosuggestions

# Add in snippets
# zinit snippet OMZP::kubectl
zinit snippet OMZP::kubectx

# Load Completions
autoload -Uz compinit && compinit

# Enable kubectl autocompletion
if command -v kubectl &>/dev/null; then
    source <(kubectl completion zsh)
fi

# Enable Velero autocompletion
if command -v velero &>/dev/null; then
    source <(velero completion zsh)
fi

# Enable chezmoi autocompletion
if command -v chezmoi &>/dev/null; then
    source <(chezmoi completion zsh)
fi

zinit cdreplay -q

# History
HISTFILE=~/.histfile
HISTSIZE=5000
SAVEHIST=5000
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

setopt autocd beep
bindkey -v

# Enable fzf history search
# export FZF_DEFAULT_COMMAND='rg --files'  # (Requires `ripgrep` for faster file search)
export FZF_DEFAULT_COMMAND='rg --files --hidden --glob "!.git/*"'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border'

# Key bindings for fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

if ! command -v starship >/dev/null 2>&1; then
    brew install starship
fi
eval "$(starship init zsh)"

export EDITOR=nvim
export VISUAL=nvim

# Aliases
alias v=nvim
alias k=kubectl
compdef _kubectl k

# PATH
export PATH=$PATH:$HOME/bin

# keybinds
bindkey '^[[1;5D' backward-word
bindkey '^[[1;5C' forward-word

# Kubernetes
if [[ -f "$HOME/.kube/config" ]]; then
    export KUBECONFIG=$HOME/.kube/config
fi

# Set tab title
echo -ne "\033]0;$USER@$HOST\a"


# Check if fastfetch is installed, and run it if available
if command -v fastfetch >/dev/null 2>&1; then
    fastfetch
fi

# Display if any dotfiles have changed in remote git
git -C `chezmoi source-path` fetch origin > /dev/null 2>&1
changed_files=$(chezmoi git -- diff --name-only origin/main)

# Check if the variable is empty
if [ -z "$changed_files" ]; then
    echo "chezmoi: dotfiles up to date"
else
    formatted_files=$(echo "$changed_files" | paste -sd ', ' -)
    echo "chezmoi: $formatted_files"
fi

# Add any machine specific config
ZSH_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}/zsh"
if [[ -f "${ZSH_CONFIG_HOME}/zshrc.local" ]]; then
    source "${ZSH_CONFIG_HOME}/zshrc.local"
fi
